{
  "openapi": "3.1.0",
  "info": {
    "title": "deprank-server",
    "description": "",
    "license": {
      "name": "Apache-2.0",
      "identifier": "Apache-2.0"
    },
    "version": "0.3.0"
  },
  "paths": {
    "/v1/airdrops/{id}": {
      "get": {
        "tags": [
          "Airdrop"
        ],
        "summary": "Get airdrop detail.",
        "operationId": "get-airdrop-detail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of airdrop",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Airdrop retrieved successfully"
          },
          "404": {
            "description": "Airdrop not found"
          },
          "500": {
            "description": "Failed to get airdrop"
          }
        }
      },
      "post": {
        "tags": [
          "Airdrop"
        ],
        "summary": "Submit wallet address to airdrop for receive.",
        "operationId": "submit-airdop-wallet-address",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of airdrop",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Submit wallet address request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "address"
                ],
                "properties": {
                  "address": {
                    "type": "string",
                    "description": "The address of the wallet."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Wallet address submitted successfully"
          },
          "404": {
            "description": "Airdrop not found"
          },
          "500": {
            "description": "Failed to get airdrop"
          }
        }
      }
    },
    "/v1/projects/{owner}/{name}": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get a project",
        "operationId": "get-project-detail",
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "description": "The owner of project",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of project",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectResponse"
                }
              }
            }
          },
          "404": {
            "description": "Project not found"
          },
          "500": {
            "description": "Failed to get project"
          }
        }
      }
    },
    "/v1/projects/{owner}/{name}/contributors": {
      "get": {
        "tags": [
          "Contributor"
        ],
        "summary": "Get contributors list of the project",
        "operationId": "get-contributors-list",
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "description": "The owner of project",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of project",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contributors retrieved successfully"
          },
          "404": {
            "description": "Project not found"
          },
          "500": {
            "description": "Failed to get project"
          }
        }
      }
    },
    "/v1/projects/{owner}/{name}/contributors/{username}": {
      "get": {
        "tags": [
          "Contributor"
        ],
        "summary": "Get the contributor detail of the project",
        "operationId": "get-contributor-detail",
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "description": "The owner of project",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of project",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "path",
            "description": "The name of contributor",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contributor retrieved successfully"
          },
          "404": {
            "description": "Project not found"
          },
          "500": {
            "description": "Failed to get project"
          }
        }
      }
    },
    "/v1/projects/{owner}/{name}/dependencies": {
      "get": {
        "tags": [
          "Dependency"
        ],
        "summary": "Get dependencies list of the project",
        "operationId": "get-dependencies-list",
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "description": "The owner of project",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of project",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dependencies retrieved successfully"
          },
          "404": {
            "description": "Project not found"
          },
          "500": {
            "description": "Failed to get project"
          }
        }
      }
    },
    "/v1/projects/{owner}/{name}/dependencies/{dep}": {
      "get": {
        "tags": [
          "Dependency"
        ],
        "summary": "Get the dependency detail of the project",
        "operationId": "get-dependency-detail",
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "description": "The owner of project",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of project",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dep",
            "in": "path",
            "description": "The name of dependency",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dependency retrieved successfully"
          },
          "404": {
            "description": "Project not found"
          },
          "500": {
            "description": "Failed to get project"
          }
        }
      }
    },
    "/v1/workflows": {
      "post": {
        "tags": [
          "Workflow"
        ],
        "summary": "Create a workflow in the current account.",
        "operationId": "create-workflow",
        "requestBody": {
          "description": "Create workflow request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "repo"
                ],
                "properties": {
                  "branch": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Git branch, eg. master or main"
                  },
                  "repo": {
                    "type": "string",
                    "description": "Source code repository"
                  },
                  "rev": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "A commit hash like rev = \"4c59b707\", or a named reference exposed by\nthe remote repository such as rev = \"refs/pull/493/head\". What references\nare available varies by where the repo is hosted."
                  },
                  "tag": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Git tag, eg. v1.0"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Workflow created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workflows/{id}": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "summary": "Get a workflow",
        "operationId": "get-workflow-detail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of workflow",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Workflow retrieved successfully"
          },
          "404": {
            "description": "Workflow not found"
          },
          "500": {
            "description": "Failed to get workflow"
          }
        }
      },
      "delete": {
        "tags": [
          "Workflow"
        ],
        "summary": "Delete a workflow",
        "operationId": "delete-workflow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of workflow",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Workflow deleted successfully"
          },
          "404": {
            "description": "Workflow not found"
          },
          "500": {
            "description": "Failed to delete workflow"
          }
        }
      }
    },
    "/v1/workflows/{id}/allocations": {
      "get": {
        "tags": [
          "Allocation"
        ],
        "summary": "Get allocations list of the workflow",
        "operationId": "get-allocations-list",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of workflow",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Allocations retrieved successfully"
          },
          "404": {
            "description": "Workflow not found"
          },
          "500": {
            "description": "Failed to get workflow"
          }
        }
      }
    },
    "/v1/workflows/{id}/allocations/{allocation_id}": {
      "get": {
        "tags": [
          "Allocation"
        ],
        "summary": "Get the allocation detail of the workflow",
        "operationId": "get-allocation-detail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of workflow",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "allocation_id",
            "in": "path",
            "description": "The id of allocation",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Allocation retrieved successfully"
          },
          "404": {
            "description": "Workflow not found"
          },
          "500": {
            "description": "Failed to get workflow"
          }
        }
      }
    },
    "/v1/workflows/{id}/contributions": {
      "get": {
        "tags": [
          "Contribution"
        ],
        "summary": "Get contributions list of the workflow",
        "operationId": "get-contributions-list",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of workflow",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contributions retrieved successfully"
          },
          "404": {
            "description": "Workflow not found"
          },
          "500": {
            "description": "Failed to get workflow"
          }
        }
      }
    },
    "/v1/workflows/{id}/contributions/{contribution_id}": {
      "get": {
        "tags": [
          "Contribution"
        ],
        "summary": "Get the contribution detail of the workflow",
        "operationId": "get-contribution-detail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of workflow",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "contribution_id",
            "in": "path",
            "description": "The id of contribution",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contribution retrieved successfully"
          },
          "404": {
            "description": "Workflow not found"
          },
          "500": {
            "description": "Failed to get workflow"
          }
        }
      }
    },
    "/v1/workflows/{id}/wallet-address": {
      "put": {
        "tags": [
          "Wallet"
        ],
        "summary": "Bind wallet address to workflow.",
        "operationId": "bind-wallet-address",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of workflow",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Bind wallet address request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "address"
                ],
                "properties": {
                  "address": {
                    "type": "string",
                    "description": "The address of the wallet."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Wallet address bound successfully"
          },
          "404": {
            "description": "Workflow not found"
          },
          "500": {
            "description": "Failed to bind wallet address"
          }
        }
      },
      "delete": {
        "tags": [
          "Wallet"
        ],
        "summary": "Unbind wallet address from workflow.",
        "operationId": "unbind-wallet-address",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of workflow",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Wallet address unbound successfully"
          },
          "404": {
            "description": "Workflow not found"
          },
          "500": {
            "description": "Failed to unbind wallet address"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateWorkflowRequest": {
        "type": "object",
        "required": [
          "repo"
        ],
        "properties": {
          "branch": {
            "type": [
              "string",
              "null"
            ],
            "description": "Git branch, eg. master or main"
          },
          "repo": {
            "type": "string",
            "description": "Source code repository"
          },
          "rev": {
            "type": [
              "string",
              "null"
            ],
            "description": "A commit hash like rev = \"4c59b707\", or a named reference exposed by\nthe remote repository such as rev = \"refs/pull/493/head\". What references\nare available varies by where the repo is hosted."
          },
          "tag": {
            "type": [
              "string",
              "null"
            ],
            "description": "Git tag, eg. v1.0"
          }
        }
      },
      "ProjectResponse": {
        "type": "object",
        "required": [
          "repo"
        ],
        "properties": {
          "branch": {
            "type": [
              "string",
              "null"
            ],
            "description": "Git branch, eg. master or main"
          },
          "repo": {
            "type": "string",
            "description": "Source code repository"
          },
          "rev": {
            "type": [
              "string",
              "null"
            ],
            "description": "A commit hash like rev = \"4c59b707\", or a named reference exposed by\nthe remote repository such as rev = \"refs/pull/493/head\". What references\nare available varies by where the repo is hosted."
          },
          "tag": {
            "type": [
              "string",
              "null"
            ],
            "description": "Git tag, eg. v1.0"
          }
        }
      },
      "WalletAddressRequest": {
        "type": "object",
        "required": [
          "address"
        ],
        "properties": {
          "address": {
            "type": "string",
            "description": "The address of the wallet."
          }
        }
      },
      "WorkflowResponse": {
        "type": "object",
        "required": [
          "repo"
        ],
        "properties": {
          "branch": {
            "type": [
              "string",
              "null"
            ],
            "description": "Git branch, eg. master or main"
          },
          "repo": {
            "type": "string",
            "description": "Source code repository"
          },
          "rev": {
            "type": [
              "string",
              "null"
            ],
            "description": "A commit hash like rev = \"4c59b707\", or a named reference exposed by\nthe remote repository such as rev = \"refs/pull/493/head\". What references\nare available varies by where the repo is hosted."
          },
          "tag": {
            "type": [
              "string",
              "null"
            ],
            "description": "Git tag, eg. v1.0"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Airdrop",
      "description": "The Airdrop Service Handlers"
    },
    {
      "name": "Allocation",
      "description": "The Allocation Service Handlers"
    },
    {
      "name": "Contribution",
      "description": "The Contribution Service Handlers"
    },
    {
      "name": "Contributor",
      "description": "The Contributor Service Handlers"
    },
    {
      "name": "Dependency",
      "description": "The Dependency Service Handlers"
    },
    {
      "name": "Project",
      "description": "The Project Service Handlers"
    },
    {
      "name": "Wallet",
      "description": "The Wallet address Service Handlers"
    },
    {
      "name": "Workflow",
      "description": "The Workflow Service Handlers"
    }
  ]
}
